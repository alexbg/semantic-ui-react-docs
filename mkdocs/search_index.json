{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Semantic ui react docs\n\n\nBOTH DOCUMENTATION AND MODULE STILL IN CONSTRUCTION\n\n\nSemantic ui react is a module to use the framework Semantic-ui with React js.\nHere you can learn how to use this.\n\n\nCommon configuration\n\n\nYou will always need those modules:\n\n\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\n\n\n\n\nFor now all react elements has the next common configuration:\n\n\nconfig =  {\n    className: string or array,\n    color: string,\n    style: string or array\n}\n\n\n\n\n\n\nclassName\n: it is the class attribute of a html tag\n\n\ncolor\n: What kind of color will you button has.\n\n\nstyle\n: size,state,basic,etc\n\n\n\n\nTo each react element is given a configuration with the name \nconfig\n, example:\n\n\nHere I am creating a button\n\n\nFOR NOW YOU CAN NOT USE DATA ATTRIBUTE.\n\n\nvar button = require('semantic-ui-react/components/buttons/button');\n\nvar configButton = {\n  text: 'Hello world',\n  className:  \u2018my-first-button\u2019\n  color: 'info',\n  others: {\n    id: 'hello-world-button',\n    name: 'The best button'\n  },\n  events: {\n    onClick: function(){console.log(this.props.config)}\n  }\n};\n\nReactDOM.render(React.createElement(button,{config:configButton}),document.getElementById('test'));",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-semantic-ui-react-docs",
            "text": "BOTH DOCUMENTATION AND MODULE STILL IN CONSTRUCTION  Semantic ui react is a module to use the framework Semantic-ui with React js.\nHere you can learn how to use this.",
            "title": "Welcome to Semantic ui react docs"
        },
        {
            "location": "/#common-configuration",
            "text": "You will always need those modules:  \nvar React = require('react');\nvar ReactDOM = require('react-dom');  For now all react elements has the next common configuration:  config =  {\n    className: string or array,\n    color: string,\n    style: string or array\n}   className : it is the class attribute of a html tag  color : What kind of color will you button has.  style : size,state,basic,etc   To each react element is given a configuration with the name  config , example:  Here I am creating a button  FOR NOW YOU CAN NOT USE DATA ATTRIBUTE.  var button = require('semantic-ui-react/components/buttons/button');\n\nvar configButton = {\n  text: 'Hello world',\n  className:  \u2018my-first-button\u2019\n  color: 'info',\n  others: {\n    id: 'hello-world-button',\n    name: 'The best button'\n  },\n  events: {\n    onClick: function(){console.log(this.props.config)}\n  }\n};\n\nReactDOM.render(React.createElement(button,{config:configButton}),document.getElementById('test'));",
            "title": "Common configuration"
        },
        {
            "location": "/elements/buttons/",
            "text": "Attributes in style\n\n\n\n\nactive\n\n\ndisabled\n\n\nloading\n\n\nsize\n\n\ncompact\n\n\nfluid\n\n\ncircular\n\n\n\n\nColors\n\n\nThe attribute color can get the name you want, but there are some predefined\nnames.\n\n\n\n\nprimary\n\n\nsecondary\n\n\ndanger\n\n\ninfo\n\n\nsuccess\n\n\n\n\nButton\n\n\nHow to make a button.\n\n\nYou will need the basic modules and the button module.\n\n\nAttributes:\n\n\n\n\ntext\n: the button's text\n\n\nclassName\n: class attribute\n\n\ncolor\n: The color of button\n\n\nothers\n: More attributes you want to add in html's tags\n\n\nevents\n: The events you want to add in html's tags\n\n\n\n\nExample:\n\n\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar button = require('semantic-ui-react/components/buttons/button');\n\nvar configButton = {\n  text: 'Hello world',\n  className:  \u2018my-first-button\u2019\n  color: 'info',\n  others: {\n    id: 'hello-world-button',\n    name: 'The best button'\n  },\n  events: {\n    onClick: function(){console.log(this.props.config)}\n  }\n};\n\nReactDOM.render(React.createElement(button,{config:configButton}),document.getElementById('test'));\n\n\n\n\n\nButton Group\n\n\nHow to make a group of buttons.\n\n\nYou will need the basic modules and the buttonsGroup module.\n\n\nAttributes:\n\n\n\n\ngroup\n: An array with object that contains a button and an icon\n\n\nclassName\n: class attribute\n\n\ncolor\n: The color of all butons\n\n\nothers\n: More attributes you want to add in html's tags\n\n\nicon\n: A boolean to add a icon in each button\n\n\nlabeled\n: A boolean to labeled the icon and button\n\n\n\n\nExample:\n\n\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar buttonsGroup = require('semantic-ui-react/components/buttons/buttonsGroup');\n\nvar configGroupIcon = {\n  group: [\n    {\n      button: {\n        text: 'test1'\n      },\n      icon: {\n        icon: 'Alarm'\n      }\n    },\n    {\n      button: {\n        text: 'test2'\n      },\n      icon: {\n        icon: 'Alarm'\n      }\n    },\n  ],\n  icon: true,\n  style: 'vertical',\n  color: 'info',\n  labeled: true\n};\n\nReactDOM.render(React.createElement(buttonsGroup,{config:configGroupIcon}),document.getElementById('test'));\n\n\n\n\n\nYou can make a group with only buttons or icons",
            "title": "Buttons"
        },
        {
            "location": "/elements/buttons/#attributes-in-style",
            "text": "active  disabled  loading  size  compact  fluid  circular",
            "title": "Attributes in style"
        },
        {
            "location": "/elements/buttons/#colors",
            "text": "The attribute color can get the name you want, but there are some predefined\nnames.   primary  secondary  danger  info  success",
            "title": "Colors"
        },
        {
            "location": "/elements/buttons/#button",
            "text": "How to make a button.  You will need the basic modules and the button module.  Attributes:   text : the button's text  className : class attribute  color : The color of button  others : More attributes you want to add in html's tags  events : The events you want to add in html's tags   Example:  \nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar button = require('semantic-ui-react/components/buttons/button');\n\nvar configButton = {\n  text: 'Hello world',\n  className:  \u2018my-first-button\u2019\n  color: 'info',\n  others: {\n    id: 'hello-world-button',\n    name: 'The best button'\n  },\n  events: {\n    onClick: function(){console.log(this.props.config)}\n  }\n};\n\nReactDOM.render(React.createElement(button,{config:configButton}),document.getElementById('test'));",
            "title": "Button"
        },
        {
            "location": "/elements/buttons/#button-group",
            "text": "How to make a group of buttons.  You will need the basic modules and the buttonsGroup module.  Attributes:   group : An array with object that contains a button and an icon  className : class attribute  color : The color of all butons  others : More attributes you want to add in html's tags  icon : A boolean to add a icon in each button  labeled : A boolean to labeled the icon and button   Example:  \nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar buttonsGroup = require('semantic-ui-react/components/buttons/buttonsGroup');\n\nvar configGroupIcon = {\n  group: [\n    {\n      button: {\n        text: 'test1'\n      },\n      icon: {\n        icon: 'Alarm'\n      }\n    },\n    {\n      button: {\n        text: 'test2'\n      },\n      icon: {\n        icon: 'Alarm'\n      }\n    },\n  ],\n  icon: true,\n  style: 'vertical',\n  color: 'info',\n  labeled: true\n};\n\nReactDOM.render(React.createElement(buttonsGroup,{config:configGroupIcon}),document.getElementById('test'));  You can make a group with only buttons or icons",
            "title": "Button Group"
        },
        {
            "location": "/elements/icons/",
            "text": "Attributes in style\n\n\n\n\nfitted\n\n\ndisabled\n\n\nloading\n\n\nsize\n\n\ncircular\n\n\nbordered\n\n\nlink\n\n\nrotated\n\n\n\n\nColors\n\n\nThe attribute color can get the name you want, but there are some predefined\nnames.\n\n\n\n\nprimary\n\n\nsecondary\n\n\ndanger\n\n\ninfo\n\n\nsuccess\n\n\n\n\nIcon\n\n\nHow to make a icon.\n\n\nYou will need the basic modules and the icon module.\n\n\nAttributes:\n\n\n\n\ntext\n: the button's text\n\n\nclassName\n: class attribute\n\n\ncolor\n: The color of icon\n\n\nothers\n: More attributes you want to add in html's tags\n\n\nevents\n: The events you want to add in html's tags\n\n\n\n\nExample:\n\n\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar icon = require('semantic-ui-react/components/icons/icon');\n\nvar iconConfig = {\n  className: 'icon-test',\n  icon: 'Alarm',\n  style: 'circular',\n  color: 'danger'\n}\n\nReactDOM.render(React.createElement(icon,{config:iconConfig}),document.getElementById('test'));",
            "title": "Icons"
        },
        {
            "location": "/elements/icons/#attributes-in-style",
            "text": "fitted  disabled  loading  size  circular  bordered  link  rotated",
            "title": "Attributes in style"
        },
        {
            "location": "/elements/icons/#colors",
            "text": "The attribute color can get the name you want, but there are some predefined\nnames.   primary  secondary  danger  info  success",
            "title": "Colors"
        },
        {
            "location": "/elements/icons/#icon",
            "text": "How to make a icon.  You will need the basic modules and the icon module.  Attributes:   text : the button's text  className : class attribute  color : The color of icon  others : More attributes you want to add in html's tags  events : The events you want to add in html's tags   Example:  \nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar icon = require('semantic-ui-react/components/icons/icon');\n\nvar iconConfig = {\n  className: 'icon-test',\n  icon: 'Alarm',\n  style: 'circular',\n  color: 'danger'\n}\n\nReactDOM.render(React.createElement(icon,{config:iconConfig}),document.getElementById('test'));",
            "title": "Icon"
        }
    ]
}